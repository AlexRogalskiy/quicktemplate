// This file is automatically generated by qtc from "tablepage.qtpl".
// See https://github.com/valyala/quicktemplate for details.

//line templates/tablepage.qtpl:1
package templates

//line templates/tablepage.qtpl:1
import (
	"io"

	"github.com/valyala/quicktemplate"
)

// Table page template. Implements BasePage methods.
//

//line templates/tablepage.qtpl:3
var (
	_ = io.Copy
	_ = quicktemplate.AcquireByteBuffer
)

//line templates/tablepage.qtpl:4
type TablePage struct {
	Rows []string
}

//line templates/tablepage.qtpl:10
func (p *TablePage) StreamTitle(qw *quicktemplate.Writer) {
	//line templates/tablepage.qtpl:10
	qw.N().S(`
	This is table page
`)
//line templates/tablepage.qtpl:12
}

//line templates/tablepage.qtpl:12
func (p *TablePage) WriteTitle(qww io.Writer) {
	//line templates/tablepage.qtpl:12
	qw := quicktemplate.AcquireWriter(qww)
	//line templates/tablepage.qtpl:12
	p.StreamTitle(qw)
	//line templates/tablepage.qtpl:12
	quicktemplate.ReleaseWriter(qw)
//line templates/tablepage.qtpl:12
}

//line templates/tablepage.qtpl:12
func (p *TablePage) Title() string {
	//line templates/tablepage.qtpl:12
	qb := quicktemplate.AcquireByteBuffer()
	//line templates/tablepage.qtpl:12
	p.WriteTitle(qb)
	//line templates/tablepage.qtpl:12
	qs := string(qb.B)
	//line templates/tablepage.qtpl:12
	quicktemplate.ReleaseByteBuffer(qb)
	//line templates/tablepage.qtpl:12
	return qs
//line templates/tablepage.qtpl:12
}

//line templates/tablepage.qtpl:15
func (p *TablePage) StreamBody(qw *quicktemplate.Writer) {
	//line templates/tablepage.qtpl:15
	qw.N().S(`
	<h1>Table page</h1>

	`)
	//line templates/tablepage.qtpl:18
	p.streamform(qw)
	//line templates/tablepage.qtpl:18
	qw.N().S(`

	`)
	//line templates/tablepage.qtpl:20
	if len(p.Rows) == 0 {
		//line templates/tablepage.qtpl:20
		qw.N().S(`
		No rows. Click <a href="/table?rowsCount=5">here</a>.
	`)
		//line templates/tablepage.qtpl:22
	} else {
		//line templates/tablepage.qtpl:22
		qw.N().S(`
		<table>
			`)
		//line templates/tablepage.qtpl:24
		streamemitRows(qw, p.Rows)
		//line templates/tablepage.qtpl:24
		qw.N().S(`
		</table>
	`)
		//line templates/tablepage.qtpl:26
	}
	//line templates/tablepage.qtpl:26
	qw.N().S(`
`)
//line templates/tablepage.qtpl:27
}

//line templates/tablepage.qtpl:27
func (p *TablePage) WriteBody(qww io.Writer) {
	//line templates/tablepage.qtpl:27
	qw := quicktemplate.AcquireWriter(qww)
	//line templates/tablepage.qtpl:27
	p.StreamBody(qw)
	//line templates/tablepage.qtpl:27
	quicktemplate.ReleaseWriter(qw)
//line templates/tablepage.qtpl:27
}

//line templates/tablepage.qtpl:27
func (p *TablePage) Body() string {
	//line templates/tablepage.qtpl:27
	qb := quicktemplate.AcquireByteBuffer()
	//line templates/tablepage.qtpl:27
	p.WriteBody(qb)
	//line templates/tablepage.qtpl:27
	qs := string(qb.B)
	//line templates/tablepage.qtpl:27
	quicktemplate.ReleaseByteBuffer(qb)
	//line templates/tablepage.qtpl:27
	return qs
//line templates/tablepage.qtpl:27
}

//line templates/tablepage.qtpl:29
func streamemitRows(qw *quicktemplate.Writer, rows []string) {
	//line templates/tablepage.qtpl:29
	qw.N().S(`
	<tr>
		<th>#</th>
		<th>value</th>
	</tr>

	`)
	//line templates/tablepage.qtpl:35
	for n, r := range rows {
		//line templates/tablepage.qtpl:35
		qw.N().S(`
		`)
		//line templates/tablepage.qtpl:36
		if r == "bingo" {
			//line templates/tablepage.qtpl:36
			qw.N().S(`
			<tr><td colspan="2"><h1>BINGO!</h1></td></tr>
			`)
			//line templates/tablepage.qtpl:38
			return
			//line templates/tablepage.qtpl:39
		} else if n == 42 {
			//line templates/tablepage.qtpl:39
			qw.N().S(`
			<tr><td colspan="2">42 rows already generated</td></tr>
			`)
			//line templates/tablepage.qtpl:41
			break
			//line templates/tablepage.qtpl:42
		}
		//line templates/tablepage.qtpl:42
		qw.N().S(`

		<tr style="background: `)
		//line templates/tablepage.qtpl:44
		if n&1 == 1 {
			//line templates/tablepage.qtpl:44
			qw.N().S(`white`)
			//line templates/tablepage.qtpl:44
		} else {
			//line templates/tablepage.qtpl:44
			qw.N().S(`#ddd`)
			//line templates/tablepage.qtpl:44
		}
		//line templates/tablepage.qtpl:44
		qw.N().S(`">
			<td>`)
		//line templates/tablepage.qtpl:45
		qw.N().D(n + 1)
		//line templates/tablepage.qtpl:45
		qw.N().S(`</td>
			<td>`)
		//line templates/tablepage.qtpl:46
		qw.E().S(r)
		//line templates/tablepage.qtpl:46
		qw.N().S(`</td>
		</tr>
	`)
		//line templates/tablepage.qtpl:48
	}
	//line templates/tablepage.qtpl:48
	qw.N().S(`

	<tr><td colspan="2">No bingo found</td></tr>
`)
//line templates/tablepage.qtpl:51
}

//line templates/tablepage.qtpl:51
func writeemitRows(qww io.Writer, rows []string) {
	//line templates/tablepage.qtpl:51
	qw := quicktemplate.AcquireWriter(qww)
	//line templates/tablepage.qtpl:51
	streamemitRows(qw, rows)
	//line templates/tablepage.qtpl:51
	quicktemplate.ReleaseWriter(qw)
//line templates/tablepage.qtpl:51
}

//line templates/tablepage.qtpl:51
func emitRows(rows []string) string {
	//line templates/tablepage.qtpl:51
	qb := quicktemplate.AcquireByteBuffer()
	//line templates/tablepage.qtpl:51
	writeemitRows(qb, rows)
	//line templates/tablepage.qtpl:51
	qs := string(qb.B)
	//line templates/tablepage.qtpl:51
	quicktemplate.ReleaseByteBuffer(qb)
	//line templates/tablepage.qtpl:51
	return qs
//line templates/tablepage.qtpl:51
}

//line templates/tablepage.qtpl:53
func (p *TablePage) streamform(qw *quicktemplate.Writer) {
	//line templates/tablepage.qtpl:53
	qw.N().S(`
	<form>
		Rows: <input type="text" name="rowsCount" value="`)
	//line templates/tablepage.qtpl:55
	qw.N().D(len(p.Rows))
	//line templates/tablepage.qtpl:55
	qw.N().S(`"/><br/>
		<input type="submit" value="Generate!"/>
	</form>
`)
//line templates/tablepage.qtpl:58
}

//line templates/tablepage.qtpl:58
func (p *TablePage) writeform(qww io.Writer) {
	//line templates/tablepage.qtpl:58
	qw := quicktemplate.AcquireWriter(qww)
	//line templates/tablepage.qtpl:58
	p.streamform(qw)
	//line templates/tablepage.qtpl:58
	quicktemplate.ReleaseWriter(qw)
//line templates/tablepage.qtpl:58
}

//line templates/tablepage.qtpl:58
func (p *TablePage) form() string {
	//line templates/tablepage.qtpl:58
	qb := quicktemplate.AcquireByteBuffer()
	//line templates/tablepage.qtpl:58
	p.writeform(qb)
	//line templates/tablepage.qtpl:58
	qs := string(qb.B)
	//line templates/tablepage.qtpl:58
	quicktemplate.ReleaseByteBuffer(qb)
	//line templates/tablepage.qtpl:58
	return qs
//line templates/tablepage.qtpl:58
}
