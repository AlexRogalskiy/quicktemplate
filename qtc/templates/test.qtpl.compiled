//line templates/test.qtpl:1
package templates

//line templates/test.qtpl:1
import (
	"io"

	"github.com/valyala/quicktemplate"
)

//line templates/test.qtpl:5
import (
	"fmt"
	"strconv"
)

//line templates/test.qtpl:12
var (
	_ = io.Copy
	_ = quicktemplate.AcquireByteBuffer
)

//line templates/test.qtpl:13
type FooArgs struct {
	S string
	N int	
}

//line templates/test.qtpl:20
func streamFoo(qw *quicktemplate.Writer, a []FooArgs) {
	//line templates/test.qtpl:20
	qw.N().S(`
	<h1>Hello, I'm Foo!</h1>
	<div>
		My args are:
		`)
	//line templates/test.qtpl:24
	if len(a) == 0 {
		//line templates/test.qtpl:24
		qw.N().S(`
			no args!
		`)
	//line templates/test.qtpl:26
	} else if len(a) == 1 {
		//line templates/test.qtpl:26
		qw.N().S(`
			a single arg: `)
		//line templates/test.qtpl:27
		streamprintArgs(qw, 0, &a[0])
		//line templates/test.qtpl:27
		qw.N().S(`
		`)
	//line templates/test.qtpl:28
	} else {
		//line templates/test.qtpl:28
		qw.N().S(`
			<ul>
			`)
		//line templates/test.qtpl:30
		for i, aa := range a {
			//line templates/test.qtpl:30
			qw.N().S(`
				`)
			//line templates/test.qtpl:31
			if i >= 42 {
				//line templates/test.qtpl:31
				qw.N().S(`
					There are other args, but only the first 42 of them are shown
					`)
				//line templates/test.qtpl:33
				break
			//line templates/test.qtpl:35
			}
			//line templates/test.qtpl:35
			qw.N().S(`
				`)
			//line templates/test.qtpl:36
			streamprintArgs(qw, i, &aa)
			//line templates/test.qtpl:36
			qw.N().S(`
				Arbitrary Go code may be inserted here: `)
			//line templates/test.qtpl:37
			str := strconv.Itoa(i+42)

			//line templates/test.qtpl:37
			qw.N().S(`
				str = `)
			//line templates/test.qtpl:38
			qw.E().S(fmt.Sprintf("this html will be escaped <b>%s</b>", str))
			//line templates/test.qtpl:38
			qw.N().S(`
			`)
		//line templates/test.qtpl:39
		}
		//line templates/test.qtpl:39
		qw.N().S(`
			</ul>
		`)
	//line templates/test.qtpl:41
	}
	//line templates/test.qtpl:41
	qw.N().S(`
	</div>
	`)
	//line templates/test.qtpl:43
	qw.N().S(`
		Arbitrary tags are treated as plaintext inside plain.
		For instance, {% foo %} {% bar %} {% for %}
		{% func %} {% code %} {% return %} {% break %} {% comment %}
		and even {% unclosed tag
	`)
	//line templates/test.qtpl:48
	qw.N().S(`
	`)
	//line templates/test.qtpl:49
	qw.N().S(`Leading and trailing space between template tags is collapsed on each line inside collapsespace unless `)
	//line templates/test.qtpl:51
	qw.N().S(` `)
	//line templates/test.qtpl:51
	qw.N().S(`or `)
	//line templates/test.qtpl:51
	qw.N().S(`
`)
	//line templates/test.qtpl:51
	qw.N().S(`is used `)
	//line templates/test.qtpl:52
	qw.N().S(`
`)
//line templates/test.qtpl:53
}

//line templates/test.qtpl:53
func WriteFoo(w io.Writer, a []FooArgs) {
	//line templates/test.qtpl:53
	qw := quicktemplate.AcquireWriter(w)
	//line templates/test.qtpl:53
	streamFoo(qw, a)
	//line templates/test.qtpl:53
	quicktemplate.ReleaseWriter(qw)
//line templates/test.qtpl:53
}

//line templates/test.qtpl:53
func Foo(a []FooArgs) string {
	//line templates/test.qtpl:53
	bb := quicktemplate.AcquireByteBuffer()
	//line templates/test.qtpl:53
	WriteFoo(bb, a)
	//line templates/test.qtpl:53
	s := string(bb.B)
	//line templates/test.qtpl:53
	quicktemplate.ReleaseByteBuffer(bb)
	//line templates/test.qtpl:53
	return s
//line templates/test.qtpl:53
}

//line templates/test.qtpl:58
func streamprintArgs(qw *quicktemplate.Writer, i int, a *FooArgs) {
	//line templates/test.qtpl:58
	qw.N().S(`
	`)
	//line templates/test.qtpl:59
	if i == 0 {
		//line templates/test.qtpl:59
		qw.N().S(`
		Hide args for i = 0
		`)
		//line templates/test.qtpl:61
		return
	//line templates/test.qtpl:65
	}
	//line templates/test.qtpl:65
	qw.N().S(`
	<li>
		a[`)
	//line templates/test.qtpl:67
	qw.N().D(i)
	//line templates/test.qtpl:67
	qw.N().S(`] = {S: `)
	//line templates/test.qtpl:67
	qw.E().Q(a.S)
	//line templates/test.qtpl:67
	qw.N().S(`, N: `)
	//line templates/test.qtpl:67
	qw.N().D(a.N)
	//line templates/test.qtpl:67
	qw.N().S(`}<br>
	</li>
`)
//line templates/test.qtpl:69
}

//line templates/test.qtpl:69
func writeprintArgs(w io.Writer, i int, a *FooArgs) {
	//line templates/test.qtpl:69
	qw := quicktemplate.AcquireWriter(w)
	//line templates/test.qtpl:69
	streamprintArgs(qw, i, a)
	//line templates/test.qtpl:69
	quicktemplate.ReleaseWriter(qw)
//line templates/test.qtpl:69
}

//line templates/test.qtpl:69
func printArgs(i int, a *FooArgs) string {
	//line templates/test.qtpl:69
	bb := quicktemplate.AcquireByteBuffer()
	//line templates/test.qtpl:69
	writeprintArgs(bb, i, a)
	//line templates/test.qtpl:69
	s := string(bb.B)
	//line templates/test.qtpl:69
	quicktemplate.ReleaseByteBuffer(bb)
	//line templates/test.qtpl:69
	return s
//line templates/test.qtpl:69
}

//line templates/test.qtpl:73
type Base struct {}

//line templates/test.qtpl:75
func (b *Base) streamRun(qw *quicktemplate.Writer) {
	//line templates/test.qtpl:75
	qw.N().S(`
	<html>
		<head>`)
	//line templates/test.qtpl:77
	b.streamHead(qw)
	//line templates/test.qtpl:77
	qw.N().S(`</head>
		<body>`)
	//line templates/test.qtpl:78
	b.streamBody(qw)
	//line templates/test.qtpl:78
	qw.N().S(`</body>
	</html>
`)
//line templates/test.qtpl:80
}

//line templates/test.qtpl:80
func (b *Base) WriteRun(w io.Writer) {
	//line templates/test.qtpl:80
	qw := quicktemplate.AcquireWriter(w)
	//line templates/test.qtpl:80
	b.streamRun(qw)
	//line templates/test.qtpl:80
	quicktemplate.ReleaseWriter(qw)
//line templates/test.qtpl:80
}

//line templates/test.qtpl:80
func (b *Base) Run() string {
	//line templates/test.qtpl:80
	bb := quicktemplate.AcquireByteBuffer()
	//line templates/test.qtpl:80
	b.WriteRun(bb)
	//line templates/test.qtpl:80
	s := string(bb.B)
	//line templates/test.qtpl:80
	quicktemplate.ReleaseByteBuffer(bb)
	//line templates/test.qtpl:80
	return s
//line templates/test.qtpl:80
}

//line templates/test.qtpl:82
func (b *Base) streamHead(qw *quicktemplate.Writer) {
	//line templates/test.qtpl:82
	qw.N().S(`<title>Base title. Override it!</title>`)
//line templates/test.qtpl:82
}

//line templates/test.qtpl:82
func (b *Base) WriteHead(w io.Writer) {
	//line templates/test.qtpl:82
	qw := quicktemplate.AcquireWriter(w)
	//line templates/test.qtpl:82
	b.streamHead(qw)
	//line templates/test.qtpl:82
	quicktemplate.ReleaseWriter(qw)
//line templates/test.qtpl:82
}

//line templates/test.qtpl:82
func (b *Base) Head() string {
	//line templates/test.qtpl:82
	bb := quicktemplate.AcquireByteBuffer()
	//line templates/test.qtpl:82
	b.WriteHead(bb)
	//line templates/test.qtpl:82
	s := string(bb.B)
	//line templates/test.qtpl:82
	quicktemplate.ReleaseByteBuffer(bb)
	//line templates/test.qtpl:82
	return s
//line templates/test.qtpl:82
}

//line templates/test.qtpl:83
func (b *Base) streamBody(qw *quicktemplate.Writer) {
	//line templates/test.qtpl:83
	qw.N().S(`Base body. Override it!`)
//line templates/test.qtpl:83
}

//line templates/test.qtpl:83
func (b *Base) WriteBody(w io.Writer) {
	//line templates/test.qtpl:83
	qw := quicktemplate.AcquireWriter(w)
	//line templates/test.qtpl:83
	b.streamBody(qw)
	//line templates/test.qtpl:83
	quicktemplate.ReleaseWriter(qw)
//line templates/test.qtpl:83
}

//line templates/test.qtpl:83
func (b *Base) Body() string {
	//line templates/test.qtpl:83
	bb := quicktemplate.AcquireByteBuffer()
	//line templates/test.qtpl:83
	b.WriteBody(bb)
	//line templates/test.qtpl:83
	s := string(bb.B)
	//line templates/test.qtpl:83
	quicktemplate.ReleaseByteBuffer(bb)
	//line templates/test.qtpl:83
	return s
//line templates/test.qtpl:83
}

//line templates/test.qtpl:87
type Homepage struct {
	Base
}

//line templates/test.qtpl:92
func (h *Homepage) streamHead(qw *quicktemplate.Writer) {
	//line templates/test.qtpl:92
	qw.N().S(`<title>Homepage</title>`)
//line templates/test.qtpl:92
}

//line templates/test.qtpl:92
func (h *Homepage) WriteHead(w io.Writer) {
	//line templates/test.qtpl:92
	qw := quicktemplate.AcquireWriter(w)
	//line templates/test.qtpl:92
	h.streamHead(qw)
	//line templates/test.qtpl:92
	quicktemplate.ReleaseWriter(qw)
//line templates/test.qtpl:92
}

//line templates/test.qtpl:92
func (h *Homepage) Head() string {
	//line templates/test.qtpl:92
	bb := quicktemplate.AcquireByteBuffer()
	//line templates/test.qtpl:92
	h.WriteHead(bb)
	//line templates/test.qtpl:92
	s := string(bb.B)
	//line templates/test.qtpl:92
	quicktemplate.ReleaseByteBuffer(bb)
	//line templates/test.qtpl:92
	return s
//line templates/test.qtpl:92
}

//line templates/test.qtpl:93
func (h *Homepage) streamBody(qw *quicktemplate.Writer) {
	//line templates/test.qtpl:93
	qw.N().S(`
	Homepage body.
	And this is base body: `)
	//line templates/test.qtpl:95
	h.Base.streamBody(qw)
	//line templates/test.qtpl:95
	qw.N().S(`
`)
//line templates/test.qtpl:96
}

//line templates/test.qtpl:96
func (h *Homepage) WriteBody(w io.Writer) {
	//line templates/test.qtpl:96
	qw := quicktemplate.AcquireWriter(w)
	//line templates/test.qtpl:96
	h.streamBody(qw)
	//line templates/test.qtpl:96
	quicktemplate.ReleaseWriter(qw)
//line templates/test.qtpl:96
}

//line templates/test.qtpl:96
func (h *Homepage) Body() string {
	//line templates/test.qtpl:96
	bb := quicktemplate.AcquireByteBuffer()
	//line templates/test.qtpl:96
	h.WriteBody(bb)
	//line templates/test.qtpl:96
	s := string(bb.B)
	//line templates/test.qtpl:96
	quicktemplate.ReleaseByteBuffer(bb)
	//line templates/test.qtpl:96
	return s
//line templates/test.qtpl:96
}

